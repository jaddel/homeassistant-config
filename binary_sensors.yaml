## Some on is showering?
- platform: template
  sensors:
    bathroom_shower_occupancy:
      friendly_name: "Bathroom Shower Occupancy"
      device_class: occupancy
      delay_on:
        seconds: 2
      #delay_off:
      #  minutes: 3
      value_template: >-
        {{ states('sensor.bathroom_humidity')|float > 70 }}

## Someone is cooking
- platform: template
  sensors:
    kitchen_someone_is_cooking:
      friendly_name: "Someone is cooking"
      value_template: >-
        {{ (states('sensor.kitchen_cooking_power')|float > 80) or 
        (states('sensor.kitchen_cooking_lumi_humidity')|float > 70) }}


## The Projector is ON/OFF
- platform: template
  sensors:
    the_projector_is_on_off:
      friendly_name: "The Projector is ON/OFF"
      value_template: "{{ states('sensor.projector_power')|float > 30.0 }}"

### ATV a movie is playing?=
#- platform: template
#  sensors:
#    apple_tv_state:
#      friendly_name: A movie is playing
#      value_template: >-
#        {{ is_state('media_player.living_room_apple_tv', 'playing') and
#          ( is_state_attr('media_player.living_room_apple_tv', 'media_content_type', 'video')
#            or is_state_attr('media_player.living_room_apple_tv', 'app_name', 'youtube')
#            or is_state_attr('media_player.living_room_apple_tv', 'app_id', 'com.firecore.infuse.pro.6')) }}

## Wasching Machine Running
- platform: template
  sensors:
    washing_machine:
      friendly_name: "Washing Machine On / Off"
      delay_off:
        minutes: 5
      value_template: >-
        {{ states('sensor.waschingmachine_power')|float > 0 }}

## Dryer Running
- platform: template
  sensors:
    washing_machine:
      friendly_name: "Dryer On / Off"
      delay_off:
        minutes: 5
      value_template: >-
        {{ states('sensor.dryer_power')|float > 0 }}

## Dishwasher Machine Running
- platform: template
  sensors:
    washing_machine:
      friendly_name: "Dishwasher On / Off"
      delay_off:
        minutes: 5
      value_template: >-
        {{ states('sensor.dishwasher_power')|float > 0 }}

## Someone home
- platform: template
  sensors:
    someone_home:
      friendly_name: Someone Home
      device_class: presence
      value_template: >-
        {{ (states.person |selectattr('state', 'eq', 'home')|list|length > 0) or 
        (is_state('input_boolean.guest_at_home', 'on')) }}
        
## Max PC in use
- platform: template
  sensors:
    max_pc_in_use:
      friendly_name: "Max PC in use"
      value_template: >-
        {{ (states('sensor.socket_office_pc_power')|float > 25.0) or
        ((as_timestamp(now()) - as_timestamp(
        states.sensor.last_active_sensor.last_changed))|float < 60)  }}

## Example configuration entry
#template:
#  - trigger:
#      - platform: time_pattern
#        # This will update every night
#
#        seconds: 30
#    sensor:
#      # Keep track how many days have past since a date
#      - name: Not smoking
#        state: >-
#        {{ (states('sensor.office_desk_peripherals_power')|float > 30.0) or
#        ((as_timestamp(now()) - as_timestamp(
#        states.sensor.last_active_sensor.last_changed))|float < 60)  }}