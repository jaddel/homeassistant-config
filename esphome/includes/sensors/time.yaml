# Time
#
# The time component allows you to set up real time clock time sources
# for ESPHome.
#
# https://esphome.io/components/time.html
#
substitutions:
  time_timezone: "Europe/Berlin"

time:
  - platform: homeassistant
    id: time_homeassistant
    timezone: "${time_timezone}"
    on_time_sync:
      - component.update: sensor_uptime_timestamp

  - platform: sntp
    id: time_sntp
    servers: 
      - $ntp
    timezone: "${time_timezone}"

# Uptime Timestamp Sensor
#
# This sensor is an alternative for the uptime sensor, which only sends the
# startup timestamp of the device ONCE! Instead of sending updates to
# Home Assistant constantly.
#
# This saves you tons of updates to be processed and, if recorded/stored in the
# Home Assistant database, many many less rows.
#
# This sensor can be triggered manually and will only update the status once!
# This package needs `time/homeassistant.yaml` and `sensor/uptime.yaml` to work.
# See `common/time.yaml` for an example usage.
#
sensor:
  - platform: template
    id: sensor_uptime_timestamp
    name: "${friendly_name} Uptime"
    device_class: "timestamp"
    accuracy_decimals: 0
    update_interval: never
    lambda: |-
      static float timestamp = (
        id(time_homeassistant).utcnow().timestamp - id(sensor_uptime).state
      );
      return timestamp;

# I see many of you using this sensor in Home Assistant, but please, don't.
# There is no need to have an update of the uptime, just send the timestamp
# of when the device started ONCE. It will have the same effect and saves
# you system tons of processing and recording.
  - platform: uptime
    id: sensor_uptime