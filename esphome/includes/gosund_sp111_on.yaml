#Gosund SP111 Template restore_mode: ALWAYS_ON

# Basic Config
esphome:
  name: "${device_name}"
  platform: ESP8266
  board: esp8285

#Network
<<: !include network.yaml

logger:
api:
ota:

# Device Specific Config
time:
  - platform: homeassistant
    id: homeassistant_time
    
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO13
      inverted: false
    name: "${friendly_name}"
    internal: true
    
switch:
  - platform: gpio
    name: "${friendly_name}"
    pin: GPIO15
    restore_mode: ALWAYS_ON
  - platform: gpio
    name: "${friendly_name} LED Blue"
    pin: GPIO02
    inverted: True
    restore_mode: ALWAYS_OFF
    internal: true
  - platform: gpio
    name: "${friendly_name} LED Red"
    pin: GPIO00
    inverted: True
    restore_mode: ALWAYS_OFF
    internal: true
  
sensor:
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: True
    cf_pin: GPIO05
    cf1_pin: GPIO04
    current:
      name: "${friendly_name} Amperage"
      unit_of_measurement: A
      accuracy_decimals: 3
    voltage:
      name: "${friendly_name} Voltage"
      unit_of_measurement: V
      accuracy_decimals: 3
      filters:
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.0
            - 720.426 -> 239.0
    power:
      name: "${friendly_name} Wattage"
      unit_of_measurement: W
      id: "power_wattage"
      accuracy_decimals: 3
      filters:
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.9
            - 33.579 -> 5.8
            - 217.216 -> 30.2
            - 7108.610 -> 973.0
        # Make everything below 2W appear as just 0W.
        # Furthermore it corrects 1.14W for the power usage of the plug.
        - lambda: if (x < (2 + 0.9)) return 0; else return (x - 0.9);
    change_mode_every: 3
    update_interval: 3s

  - platform: total_daily_energy
    name: "${friendly_name} Daily Energy"
    power_id: "power_wattage"
    filters:
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001    
    unit_of_measurement: kWh