substitutions:
  device_name: "test-switch"
  friendly_name: "test switch"
  project_name: "athom.sw01"
  project_version: "1.0"
  ssid:           !secret not_ssid
  ssid_pw:        !secret not_password
  ap_pw:          !secret ap_password 
  gateway:        !secret not_gateway
  subnet:         !secret not_subnet
  ntp:            !secret ntp

esphome:
  name: "${device_name}"
  name_add_mac_suffix: false
  platform: ESP8266
  board: esp8285
  build_path: "./.build/${device_name}/"
  project:
    name: "${project_name}"
    version: "${project_version}"

wifi:
  use_address: 10.25.30.203
packages:
  wifi:   !include includes/network.yaml

binary_sensor:     
  - platform: gpio                     
    pin: 
      number: GPIO3                           
      inverted: true 
    id: real_sensor_temp
    internal: true
    on_multi_click:
      - timing:
        - ON for at most 0.5s
        - OFF for at least 0.5s
        then:
          - logger.log: "Single Short Clicked"
          - lambda: |-
              if (id(template_sensor_1).state) {
              id(template_sensor_1).publish_state(false);
              } else { 
              id(template_sensor_1).publish_state(true);
              }

      - timing:
          - ON for at most 0.6s
          - OFF for at most 0.5s
          - ON for at most 0.6s
          - OFF for at least 0.2s
        then:
          - logger.log: "Double Clicked"
          - lambda: |-
              if (id(template_sensor_2).state) {
              id(template_sensor_2).publish_state(false);
              } else {
              id(template_sensor_2).publish_state(true); 
              }

      - timing:
          - ON for at least 1s 
          #- OFF for at least 0.5s
        then:
          - logger.log: "Single Long Clicked"
          - lambda: |-
              if (id(template_sensor_3).state) {
              id(template_sensor_3).publish_state(false);
              } else {
              id(template_sensor_3).publish_state(true); 
              }

#      - timing:
#          - ON for at least 10s
#        then:
#          - switch.turn_on: restart_switch              
  
  - platform: template
    name: "${friendly_name} 1"
    id: template_sensor_1
  - platform: template
    name: "${friendly_name} 2"
    id: template_sensor_2
  - platform: template
    name: "${friendly_name} 3"
    id: template_sensor_3

sensor:
  - platform: uptime
    name: "${friendly_name} Uptime Sensor"
    disabled_by_default: false

switch:
  - platform: restart
    id: restart_switch
    name: "${friendly_name} Restart"
    disabled_by_default: true

# GPIO switch to control the power of the hall lights. 
  - platform: gpio
    pin: GPIO13
    name: "Hall Lights Power"
    restore_mode: ALWAYS_OFF
    internal: false 

output:
#  # Relay
#  - platform: gpio
#    pin: GPIO13
#    id: relay1

# Button LED (1.0 = Blue / 0.0 = Red)
  - platform: esp8266_pwm
    pin: GPIO14
    inverted: true
    id: button_led1

light:
# Status LED
  - platform: status_led
    name: "${friendly_name} Wifi LED"
    disabled_by_default: true
    pin:
      number: GPIO0
      inverted: true
  
  # Button LED
  - platform: monochromatic
    name: "${friendly_name} LED"
    disabled_by_default: false
    id: led1
    output: button_led1
    default_transition_length: 500ms
  
#  # Relay
#  - platform: binary
#    name: "${friendly_name} Light"
#    id: light1
#    output: relay1
#    on_turn_on:
#      - light.turn_on: led1
#    on_turn_off:
#      - light.turn_off: led1

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
      disabled_by_default: true